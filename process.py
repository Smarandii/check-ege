# -*- coding: utf-8 -*-
def array_to_string(a):
    responde = ''
    for i in a:
        responde = responde + i
    return responde

def count_words(s):
    symbols = [".", ",", ":", "-", "!", "?", " ", '', '\n']
    a = divide_to_words(s)
    responde = []
    counter = 0

    for i in a:
        if counter <= 275:
            if i not in symbols:
                counter += 1
            responde.append(i)
        else:
            break

    if counter < 180:
        responde.append("Less than 180 words!")
        return "\nless than 180 words!\n"
    if counter >= 180 and counter < 275:
        responde.append(f"\n \n[words: {str(counter)}]")
        return responde
    if counter > 275:
        responde.append("\n \n[original have more than 275 words! in this message first 275 words from original]")
        return responde


def divide_to_words(s):
    symbols = [".", ",", ":", "-", "!", "?", " ", '', '\n']
    w = ''
    words = []
    for i in range(len(s)):

        if s[i] in symbols:
            if w != '':
                words.append(w)
                w = ''
            words.append(s[i])
        else:
            w = w + s[i]
    words.append(w)
    return words


def count_mistakes(s):
    if "less than 180 words!" in s:
        return '\n0 / 14'
    exelent = '–£ —Ç–µ–±—è –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–µ–µ —ç—Å—Å–µ, –Ω—É–∂–Ω–æ ... –∏ –æ–Ω–æ –±—É–¥–µ—Ç –ø—Ä—è–º —Å–∏–ª—å–Ω–æ–µüî• Keep going!'
    good = '–¢—ã –º–æ–ª–æ–¥–µ—Ü, –Ω–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ ...'
    poor = '–ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π, —Ç–µ–±–µ –ø—Ä–æ—Å—Ç–æ –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –Ω–∞–ø–∏—Å–∞–Ω–∏—è —ç—Å—Å–µ –∏ –ø–æ—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–¥ ... üí™üèº –Ø –≤ —Ç–µ–±—è –≤–µ—Ä—é üòç'
    m1 = 0
    m2 = 0
    m3 = 0
    m4 = 0
    m5 = 0
    k1 = 0
    k2 = 0
    k3 = 0
    k4 = 0
    k5 = 0
    mark = 0

    for i in range(len(s)):
        if (s[i].lower() == 'k' or s[i].lower() == '–∫') and s[i + 1].isdigit():
            if int(s[i + 1]) == 1:
                k1 = k1 + 1
            elif int(s[i + 1]) == 2:
                k2 = k2 + 1
            elif int(s[i + 1]) == 3:
                k3 = k3 + 1
            elif int(s[i + 1]) == 4:
                k4 = k4 + 1
            elif int(s[i + 1]) == 5:
                k5 = k5 + 1

    if k1 <= 1:
        mark += 3
        m1 = 3
    elif k1 == 2:
        mark += 2
        m1 = 2
    elif k1 == 3:
        mark += 1
        m1 = 1
    elif k1 > 3:
        m1 = 0

    if k2 == 0:
        mark += 3
        m2 = 3
    elif k2 == 1:
        mark += 2
        m2 = 2
    elif k2 == 2:
        mark += 1
        m2 = 1
    elif k2 >= 3:
        m2 = 0

    if k3 < 1:
        mark += 3
        m3 = 3
    elif k3 == 2 or k3 == 3:
        mark += 2
        m3 = 2
    elif k3 == 4:
        mark += 1
        m3 = 1
    elif k3 > 4:
        m3 = 0

    if k4 < 1:
        mark += 3
        m4 = 3
    elif k4 == 2:
        mark += 2
        m4 = 2
    elif k4 == 3 or k4 == 4:
        mark += 1
        m4 = 1
    elif k4 > 4:
        m4 = 0

    if k5 <= 1:
        mark += 2
        m5 = 2
    elif k5 == 2:
        mark += 2
        m5 = 2
    elif k5 == 3:
        mark += 1
        m5 = 1
    elif k5 > 3:
        m5 = 0

    if mark >= 11:
        coment = exelent
    elif mark <= 10 and mark > 6:
        coment = good
    elif mark <= 6:
        coment = poor
    responde = f'''

{coment}

–ü–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º:

K1 - {m1} / 3 (K1 - —Ä–µ—à–µ–Ω–∏–µ –∫–æ–º–º—É–Ω–∏–∫–∞—Ç–∏–≤–Ω–æ–π –∑–∞–¥–∞—á–∏: –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –æ—Ç—Ä–∞–∂–µ–Ω–∏–µ –≤—Å–µ—Ö –∞—Å–ø–µ–∫—Ç–æ–≤, —Å—Ç–∏–ª–µ–≤–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ)
K2 - {m2} / 3 (K2 - –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞: –ª–æ–≥–∏—á–Ω–æ—Å—Ç—å, –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ –ª–æ–≥–∏—á–µ—Å–∫–æ–π —Å–≤—è–∑–∏, –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –∞–±–∑–∞—Ü—ã)
K3 - {m3} / 3 (K3 - –ª–µ–∫—Å–∏–∫–∞: –≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–π –ª–µ–∫—Å–∏–∫–∏, –Ω–∞—Ä—É—à–µ–Ω–∏—è –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –ª–µ–∫—Å–∏–∫–∏)
K4 - {m4} / 3 (K4 - –≥—Ä–∞–º–º–∞—Ç–∏–∫–∞: –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –≥—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –¥–æ–ª–∂–Ω—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤—ã—Å–æ–∫–æ–º—É —É—Ä–æ–≤–Ω—é —Å–ª–æ–∂–Ω–æ—Å—Ç–∏) 
K5 - {m5} / 2 (–ö5 - –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—è –∏ –ø—É–Ω–∫—Ç—É–∞—Ü–∏—è: –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏, –ø—É–Ω–∫—Ç—É–∞—Ü–∏–æ–Ω–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ)

–û—à–∏–±–æ–∫ –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º:

K1 - {k1} 
K2 - {k2}
K3 - {k3}
K4 - {k4}
K5 - {k5} 

{str(mark)} / 14
'''
    return responde
